# Generated by Django 5.2 on 2025-04-02 19:41

import django.contrib.postgres.operations
import django.db.migrations.operations.special
from django.db import migrations, models


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# apps.users.migrations.0010_allauth_oidc_from_env_var


class Migration(migrations.Migration):
    replaces = [
        ("users", "0001_squashed_0008_alter_user_id_alter_user_options_and_more"),
        ("users", "0009_alter_user_created"),
        ("users", "0010_allauth_oidc_from_env_var"),
        ("users", "0011_alter_user_email"),
        ("users", "0012_auto_20240727_1849"),
    ]

    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "subscribe_by_default",
                    models.BooleanField(
                        default=True,
                        help_text="Subscribe to project notifications by default. Overrides project settings",
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, verbose_name="name"),
                ),
                ("analytics", models.JSONField(blank=True, null=True)),
                ("options", models.JSONField(default=dict)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="user",
            name="email",
            field=models.EmailField(max_length=254),
        ),
        django.contrib.postgres.operations.CreateCollation(
            name="case_insensitive",
            locale="und-u-ks-level2",
            provider="icu",
            deterministic=False,
        ),
        migrations.AlterField(
            model_name="user",
            name="email",
            field=models.EmailField(
                db_collation="case_insensitive", max_length=254, unique=True
            ),
        ),
    ]
